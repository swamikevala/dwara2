SET foreign_key_checks = 0;

-- Missing TFile and TFileVolume update

-- Check duplicated pathname in t_file
SELECT pathname, count(*) as duplicated_number FROM t_file group by pathname having count(*) > 1;

-- Check number of missing files in t_file 
select count(pathname) as num_missing from file1 where pathname_checksum not in (select pathname_checksum from t_file);

-- Insert missing files into t_file
select @counter := max(id) from t_file;
insert into t_file (id, checksum, deleted, directory, pathname, size, artifact_id, file_ref_id, pathname_checksum, symlink_file_id, symlink_path)
select @counter := @counter +1, checksum, deleted, directory, pathname, size, artifact_id, file_ref_id, pathname_checksum, symlink_file_id, symlink_path 
from file1 where pathname_checksum not in (select pathname_checksum from t_file);
update t_file_sequence set next_val=(select (max(id) + 1) from t_file);

-- Check number of missing t_file, volume records in t_file_volume
select tf.id, fv.volume_id 
from file1_volume fv join file1 f on fv.file_id = f.id join t_file tf on tf.pathname_checksum=f.pathname_checksum
where (tf.id, fv.volume_id) not in (
	select tfv.file_id, tfv.volume_id from t_file_volume tfv
);

-- Insert missing records in t_file_volume. Note: need to increase DBMS connection read time out to 180 or more(Preferences->SQL Editor)
insert into t_file_volume (file_id, archive_block, deleted, encrypted, verified_at, volume_block, volume_id, header_blocks, hardlink_file_id)
select tf.id, fv.archive_block, fv.deleted, fv.encrypted, fv.verified_at, fv.volume_block, fv.volume_id, fv.header_blocks, fv.hardlink_file_id
from file1_volume fv join file1 f on fv.file_id = f.id join t_file tf on tf.pathname_checksum=f.pathname_checksum
where (tf.id, fv.volume_id) not in (
	select tfv.file_id, tfv.volume_id from t_file_volume tfv
);


-- ******** UR Status out of sync as against SR(Requeued jobs scenarios) ******
  
-- Get the distinct URs whose SRs are cancelled.

select distinct(request_ref_id) from request where request_ref_id in 
	(select id from request where type = 'user' and status = 'failed' and action_id='ingest' and id not in 
		(select request_ref_id from request where request_ref_id in 
			(select id from request where type = 'user' and status = 'failed' and action_id='ingest')
		 and status = 'failed')
	 ) and status in ('cancelled');

-- excluding 694,891,7588(only 1/* SR cancelled) from the above result set

UPDATE `request` SET `status`='cancelled' WHERE id in (
1253,
13122,
28880,
50864,
50926,
50955);

-- Get the distinct URs whose SRs are completed.

select distinct(request_ref_id) from request where request_ref_id in 
	(select id from request where type = 'user' and status = 'failed' and action_id='ingest' and id not in 
		(select request_ref_id from request where request_ref_id in 
			(select id from request where type = 'user' and status = 'failed' and action_id='ingest')
		 and status = 'failed')
	 ) and status not in ('cancelled');

-- excluding 694,891,7588(only 1/* SR cancelled) and 23868(SR marked_completed) from the above result set

UPDATE `request` SET `status`='marked_completed' WHERE id =23868;

UPDATE `request` SET `status`='completed' WHERE
id in (
1677,
2142,
2435,
2450,
2501,
2559,
3553,
3555,
3759,
3764,
3786,
4962,
5234,
5286,
5319,
5327,
5329,
5339,
5345,
5347,
5349,
5351,
5353,
5355,
5357,
5359,
5363,
5377,
5379,
5383,
5385,
5387,
5391,
5393,
5399,
5407,
5421,
5433,
5515,
5567,
5573,
5592,
5604,
5609,
5615,
5619,
5623,
5627,
5637,
5653,
5672,
5674,
5678,
5686,
5696,
5700,
5704,
5716,
5718,
5724,
5740,
6154,
6789,
7074,
7522,
7694,
7754,
7830,
8250,
8437,
8728,
8833,
10004,
10274,
10700,
11100,
11128,
11132,
11134,
11204,
11234,
11238,
11244,
11246,
11262,
11307,
11340,
11506,
11552,
11568,
11584,
11588,
11602,
11634,
11696,
11967,
12005,
12031,
12071,
12075,
12083,
12095,
12151,
12166,
12214,
12293,
12305,
12681,
12687,
12693,
12697,
12707,
12713,
12719,
12726,
12730,
12734,
12762,
12774,
12788,
12790,
12792,
12794,
12796,
12798,
12800,
12843,
12973,
12975,
12977,
12979,
12983,
12989,
13126,
13313,
13315,
13317,
13319,
13321,
13323,
13325,
13327,
13329,
13331,
13333,
13546,
13548,
13550,
13552,
13554,
13556,
13558,
13560,
13562,
13564,
13566,
13568,
13570,
13576,
13586,
13590,
13605,
13609,
13615,
13617,
13621,
13625,
13629,
13631,
13646,
13658,
13664,
13724,
13728,
13732,
13738,
13746,
13750,
13756,
13758,
15155,
15725,
17456,
17741,
18029,
18057,
18329,
18766,
19045,
19416,
19561,
19666,
19704,
19896,
19918,
19920,
19939,
20209,
20241,
20285,
20291,
20303,
20319,
20327,
20367,
20369,
20373,
20397,
20401,
20405,
20425,
20465,
20561,
20569,
20592,
20606,
20610,
20616,
20620,
20622,
20626,
20659,
20663,
20671,
20675,
20681,
20687,
20691,
20695,
20699,
20705,
20709,
20711,
20713,
20715,
20723,
20731,
20739,
20743,
20745,
20749,
20753,
20757,
20761,
20765,
20773,
20775,
20787,
20793,
20797,
20803,
20815,
20821,
20827,
20833,
20839,
20853,
20859,
20867,
20873,
20883,
20889,
20893,
20899,
20905,
20911,
20917,
20921,
20927,
20931,
20937,
20941,
20945,
20965,
20971,
20975,
20979,
20983,
20987,
20993,
20995,
20999,
21005,
21009,
21025,
21029,
21035,
21041,
21111,
21113,
21209,
21223,
21239,
21243,
21245,
21247,
21249,
21251,
21253,
21255,
21257,
21259,
21261,
21263,
21267,
21269,
21277,
21279,
21281,
21283,
21285,
21307,
21323,
21341,
21355,
21361,
21371,
21421,
21433,
21445,
21449,
21451,
21477,
21505,
21507,
21509,
21513,
21521,
21537,
21539,
21547,
21557,
21559,
21561,
21573,
21597,
21696,
23408,
24003,
24084,
25053,
25247,
26748,
26760,
37729,
38184,
39121,
39131,
48187,
48205,
48537,
52737,
52851
);

UPDATE `request` SET `completed_at`='2021-01-02 17:01:08.981000' WHERE `id`='1677';


--- *** some clean up ***
-- NOTE: SR 731 used flow config V1 where jobs are created upfront. Cancel Request(74429) failed at MAM job as mam job created upfront in flow config V1 and will have job.inputartifact updated only after succesful proxy gen
UPDATE `request` SET `status`='cancelled' WHERE `id`='731';
UPDATE `request` SET `completed_at`='2021-09-23 16:39:30.000000', `message`='Uses flow config V1 and so request cannot be proceeded as is - with jobs already created upfront. Canceling and Re-ingesting artifact' WHERE `id`='74429';

-- TODO: need to update UR694 like UR7588 (1/* SR is cancelled) 

-- SR 953 - avi not supported and so no files to proxy - hence job failed. Uses flow config V1. 
-- TODO NOTE : With avi now supported we need to scan all artifacts for avi files and generate proxies - JIRA DU-662 
INSERT INTO `extension_filetype` (`sidecar`, `extension_id`, `filetype_id`) VALUES (0, 'avi', 'video');

-- NOTE: SR 953 used flow config V1 where jobs are created upfront. Cancel Request(74589) failed at MAM job as mam job created upfront in flow config V1 and will have job.inputartifact updated only after succesful proxy gen
UPDATE `request` SET `status`='cancelled' WHERE `id`='953';
UPDATE `request` SET `completed_at`='2021-09-24 14:10:18.000000', `message`='Uses flow config V1 and so request cannot be proceeded as is - with jobs already created upfront. Canceling and Re-ingesting artifact' WHERE `id`='74589';

UPDATE `artifactclass` SET `concurrent_volume_copies`=0 WHERE `id`='dept-impressions';